{"version":3,"file":"static/js/750.7eb00064.chunk.js","mappings":"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","sources":["whisper/whisper_worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable camelcase */\nimport { pipeline, env } from \"@xenova/transformers\";\n\n// Disable local models\nenv.allowLocalModels = false;\n\n// Define model factories\n// Ensures only one model is created of each type\nclass PipelineFactory {\n    static task = null;\n    static model = null;\n    static quantized = null;\n    static instance = null;\n\n    constructor(tokenizer, model, quantized) {\n        this.tokenizer = tokenizer;\n        this.model = model;\n        this.quantized = quantized;\n    }\n\n    static async getInstance(progress_callback = null) {\n        if (this.instance === null) {\n            this.instance = pipeline(this.task, this.model, {\n                quantized: this.quantized,\n                progress_callback,\n\n                // For medium models, we need to load the `no_attentions` revision to avoid running out of memory\n                revision: this.model.includes(\"/whisper-medium\") ? \"no_attentions\" : \"main\"\n            });\n        }\n\n        return this.instance;\n    }\n}\n\nlet currentModel = null\n\nasync function getModel(message) {\n\t//console.log(\"get TRANSCRIBE model \")\n\tif (currentModel) {\n\t\t//console.log(\"get TRANSCRIBE model cache\")\n\t\treturn currentModel\n\t} else {\n\t\t//console.log(\"get TRANSCRIBE model new\")\n\t\tpostMessage({\n\t\t\tstatus: \"initiate\",\n\t\t});\n\t\tlet newModel = await loadModel(message.audio,\n\t\t\tmessage.model,\n\t\t\tmessage.multilingual,\n\t\t\tmessage.quantized,\n\t\t\tmessage.subtask,\n\t\t\tmessage.language)\n\t\treturn newModel\n\t}\n}\n\nonmessage = async (event) => {\n    const message = event.data;\n    //console.log(\"TRANSCRIBE message to worker\",message)\n    if (message.init) {\n\t\t//console.log(\"TRANSCRIBE need model\")\n\t\tcurrentModel = await getModel(message)\n\t} else {\n\t\t//console.log(\"TRANSCRIBE do now\")\n\t\tconst now = new Date().getTime()\n\t\t// Do some work...\n\t\t// TODO use message data\n\t\tlet transcript = await transcribe(\n\t\t\tmessage.audio,\n\t\t\tmessage.model,\n\t\t\tmessage.multilingual,\n\t\t\tmessage.quantized,\n\t\t\tmessage.subtask,\n\t\t\tmessage.language,\n\t\t);\n\t\tif (transcript === null) return;\n\t\t//console.log('TRANSCRIPT IN ',(new Date().getTime() - now)/1000)\n\t\t// Send the result back to the main thread\n\t\tpostMessage({\n\t\t\tstatus: \"complete\",\n\t\t\ttask: \"automatic-speech-recognition\",\n\t\t\tdata: transcript,\n\t\t});\n\t}\n};\n\nclass AutomaticSpeechRecognitionPipelineFactory extends PipelineFactory {\n    static task = \"automatic-speech-recognition\";\n    static model = null;\n    static quantized = null;\n}\n\nasync function loadModel(audio,\n    model,\n    multilingual,\n    quantized,\n    subtask,\n    language) {\n//console.log(\"TRANSCRIBE load model \",model,\n    //multilingual,\n    //quantized,\n    //subtask,\n    //language)\n\tconst isDistilWhisper = model.startsWith(\"distil-whisper/\");\n\n\tlet modelName = model;\n\tif (!isDistilWhisper && !multilingual) {\n\t\tmodelName += \".en\"\n\t}\n\n\tconst p = AutomaticSpeechRecognitionPipelineFactory;\n\tif (p.model !== modelName || p.quantized !== quantized) {\n\t\t// Invalidate model if different\n\t\tp.model = modelName;\n\t\tp.quantized = quantized;\n\n\t\tif (p.instance !== null) {\n\t\t\t(await p.getInstance()).dispose();\n\t\t\tp.instance = null;\n\t\t}\n\t}\n\t\t// Load transcriber model\n\tlet transcriber = await p.getInstance((data) => {\n\t\t//console.log(\"TRANSCRIBER MODEL EVENT\",data)\n\t\tpostMessage(data);\n\t});\n\treturn transcriber\n\t\n}\n\nconst transcribe = async (\n    audio,\n    model,\n    multilingual,\n    quantized,\n    subtask,\n    language,\n) => {\n\tconst isDistilWhisper = model.startsWith(\"distil-whisper/\");\n//console.log(\"TRANSCRIBE \")\n\tif (!currentModel) {\n\t\tcurrentModel = await  getModel({audio,\n    model,\n    multilingual,\n    quantized,\n    subtask,\n    language})\n\t}\n\tlet transcriber = currentModel \n\t\n    const time_precision =\n        transcriber.processor.feature_extractor.config.chunk_length /\n        transcriber.model.config.max_source_positions;\n\n    // Storage for chunks to be processed. Initialise with an empty chunk.\n    let chunks_to_process = [\n        {\n            tokens: [],\n            finalised: false,\n        },\n    ];\n\n    // TODO: Storage for fully-processed and merged chunks\n    // let decoded_chunks = [];\n\n    function chunk_callback(chunk) {\n        let last = chunks_to_process[chunks_to_process.length - 1];\n\n        // Overwrite last chunk with new info\n        Object.assign(last, chunk);\n        last.finalised = true;\n\n        // Create an empty chunk after, if it not the last chunk\n        if (!chunk.is_last) {\n            chunks_to_process.push({\n                tokens: [],\n                finalised: false,\n            });\n        }\n    }\n\n    // Inject custom callback function to handle merging of chunks\n    function callback_function(item) {\n        let last = chunks_to_process[chunks_to_process.length - 1];\n\n        // Update tokens of last chunk\n        last.tokens = [...item[0].output_token_ids];\n\n        // Merge text chunks\n        // TODO optimise so we don't have to decode all chunks every time\n        let data = transcriber.tokenizer._decode_asr(chunks_to_process, {\n            time_precision: time_precision,\n            return_timestamps: true,\n            force_full_sequences: false,\n        });\n\n        postMessage({\n            status: \"update\",\n            task: \"automatic-speech-recognition\",\n            data: data,\n        });\n    }\n\n    // Actually run transcription\n    let output = await transcriber(audio, {\n        // Greedy\n        top_k: 0,\n        do_sample: false,\n\n        // Sliding window\n        chunk_length_s: isDistilWhisper ? 20 : 30,\n        stride_length_s: isDistilWhisper ? 3 : 5,\n\n        // Language and task\n        language: language,\n        task: subtask,\n\n        // Return timestamps\n        return_timestamps: true,\n        force_full_sequences: false,\n\n        // Callback functions\n        callback_function: callback_function, // after each generation step\n        chunk_callback: chunk_callback, // after each chunk is processed\n    }).catch((error) => {\n        postMessage({\n            status: \"error\",\n            task: \"automatic-speech-recognition\",\n            data: error,\n        });\n        return null;\n    });\n\n    return output;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [964], () => (__webpack_require__(424)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"a8cf587d\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t750: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkvoice2llm_ui\"] = self[\"webpackChunkvoice2llm_ui\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(964).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["env","allowLocalModels","PipelineFactory","constructor","tokenizer","model","quantized","this","getInstance","progress_callback","arguments","length","undefined","instance","pipeline","task","revision","includes","currentModel","async","getModel","message","postMessage","status","audio","multilingual","subtask","language","isDistilWhisper","startsWith","modelName","p","AutomaticSpeechRecognitionPipelineFactory","dispose","data","loadModel","onmessage","event","init","Date","getTime","transcript","transcribe","transcriber","time_precision","processor","feature_extractor","config","chunk_length","max_source_positions","chunks_to_process","tokens","finalised","top_k","do_sample","chunk_length_s","stride_length_s","return_timestamps","force_full_sequences","callback_function","item","output_token_ids","_decode_asr","chunk_callback","chunk","last","Object","assign","is_last","push","catch","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","leafPrototypes","getProto","getPrototypeOf","obj","t","value","mode","__esModule","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}